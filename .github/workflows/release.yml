name: Release

on:
  release:
    # https://stackoverflow.com/questions/59319281/github-action-different-between-release-created-and-published
    types: [published]

jobs:
  build:
    # https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions
    # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html
        build_type: ["Debug", "Release", "RelWithDebInfo", "MinSizeRel"]
        compiler:
          - { cc: "gcc", cxx: "g++" }
          - { cc: "clang", cxx: "clang++" }

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/actions/cache
      - name: Get date
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: dependencies
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}

      - name: Install dependencies
        run: sudo bash script/build.sh

      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release -j"$(nproc)"

      - name: Get version
        run: echo "RELEASE_VERSION=${TAG_NAME:1}" >> $GITHUB_ENV
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}

      - name: CPack
        run: |
          cpack
          mv klib-${{ env.RELEASE_VERSION }}-Linux.deb \
          klib-v${{ env.RELEASE_VERSION }}-ubuntu-20.04.deb
          mv klib-${{ env.RELEASE_VERSION }}-Linux.tar.gz \
          klib-v${{ env.RELEASE_VERSION }}-ubuntu-20.04.tar.gz
        working-directory: build

      - name: Install
        run: |
          sudo dpkg -i klib-v${{ env.RELEASE_VERSION }}-ubuntu-20.04.deb
          sudo ldconfig
        working-directory: build

      - name: Build example
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          cmake --build build --config ${{ matrix.build_type }} -j"$(nproc)"
        working-directory: example
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}

      # https://github.com/softprops/action-gh-release
      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ matrix.compiler.cxx == 'g++' && matrix.build_type == 'Release'}}
        with:
          files: |
            build/klib-v${{ env.RELEASE_VERSION }}-ubuntu-20.04.deb
            build/klib-v${{ env.RELEASE_VERSION }}-ubuntu-20.04.tar.gz
